{
	// Enable reverb?
	"enabled": true,
	"General": {
		/* Affects how quiet a sound gets based on distance. Lower values mean distant sounds are louder.
		   1.0 is the physically correct value.
		   0.2 - 1.0 or just don't set it to 0
		*/
		"attenuationFactor": 0.7,
		/* The global volume of simulated reverberations.
		   0.1 - 2.0
		*/
		"globalReverbGain": 0.7,
		/* The brightness of reverberation.
		   Higher values result in more high frequencies in reverberation.
		   Lower values give a more muffled sound to the reverb.
		   0.1 - 2.0
		*/
		"globalReverbBrightness": 0.8,
		/* The global amount of sound that will be absorbed when traveling through blocks.
		    0.1 - 4.0
		*/
		"globalBlockAbsorption": 0.8,
		/* The global amount of sound reflectance energy of all blocks.
		   Lower values result in more conservative reverb simulation with shorter reverb tails.
		   Higher values result in more generous reverb simulation with higher reverb tails.
		   0.1 - 4.0
		*/
		"globalBlockReflectance": 1.2,
		/* Minecraft won't allow sounds to play past a certain distance;
		   SoundPhysics makes that configurable by multiplying this parameter by the default distance.
		   Values too high can cause polyphony issues.
		   1.0 - 6.0
		*/
		"soundDistanceAllowance": 4.2,
		/* Represents how aggressively air absorbs high frequencies over distance.
		   A value of 1.0 is physically correct for air with normal humidity and temperature.
		   Higher values mean air will absorb more high frequencies with distance.
		   A value of 0.0 disables this effect.
		*/
		"airAbsorption": 1.3,
		/* How much sound is filtered when the player is underwater.
		   0.0 means no filter. 1.0 means fully filtered.
		   0.0 - 1.0
		*/
		"underwaterFilter": 1.0
	},
	"Performance": {
		/* If true, rain sound sources won't trace for sound occlusion.
		   This can help performance during rain.
		*/
		"skipRainOcclusionTracing": true,
		/* The number of rays to trace to determine reverberation for each sound source.
		   More rays provides more consistent tracing results but takes more time to calculate.
		   Decrease this value if you experience lag spikes when sounds play.
		*/
		"environmentEvaluationRays": 64,
		/* The number of rays bounces to trace to determine reverberation for each sound source.
		   More bounces provides more echo and sound ducting but takes more time to calculate.
		   Decrease this value if you experience lag spikes when sounds play. Capped by max distance.
		*/
		"environmentEvaluationRayBounces": 10,
		/* If true, enables a simpler technique for determining when the player and a sound source share airspace.
		   Might sometimes miss recognizing shared airspace, but it's faster to calculate.
		*/
		"simplerSharedAirspaceSimulation": true
	},
	"Materials": {
		/* Material properties for blocks.
		   0.0 - 1.0
		*/
		"materialProperties": null,
		// Makes blocks use ID (e.g. block.minecraft.stone) instead of sound group to determine material
		"blockWhiteList": []
	},
	"Vlads_Tweaks": {
		/* Disable occlusion of jukeboxes and note blocks.
		   Useful if you have an audio signaling system that you need to hear clearly
		*/
		"recordsDisable": true,
		// The amount at which occlusion is capped. 10 * block_occlusion is the theoretical limit
		"maxDirectOcclusionFromBlocks": 10.0,
		// Calculate direct occlusion as the minimum of 9 rays from vertices of a block
		"_9RayDirectOcclusion": true,
		// Whether to try calculating where the sound should come from based on reflections
		"soundDirectionEvaluation": true,
		/* How much the sound direction depends on reflected sounds.
		   Requires "Re-calculate sound direction" to be enabled.
		   0.0 is no reflected sounds, 1.0 is 100% reflected sounds.
		   0.5 is approximately physically accurate.
		*/
		"directRaysDirEvalMultiplier": 0.5,
		/* Skip redirecting non-occluded sounds (the ones you can see directly).
		   Can be inaccurate in some situations, especially when "Re-calculate sound direction" is enabled.
		*/
		"notOccludedNoRedirect": false
	},
	"Misc": {
		// General debug logging
		"debugLogging": false,
		// Occlusion tracing information logging
		"occlusionLogging": false,
		// Environment evaluation information logging
		"environmentLogging": false,
		// Performance information logging
		"performanceLogging": false,
		// Particles on traced blocks (structure_void is a block)
		"raytraceParticles": false
	},
	// Soft presets. Some of these can be applied one after another to stack effects onto a base profile.
	"preset": "LOAD_SUCCESS"
}